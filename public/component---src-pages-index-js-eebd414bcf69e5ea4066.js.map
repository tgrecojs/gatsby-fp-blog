{"version":3,"sources":["webpack:///./src/templates/allTagsIndex.js","webpack:///./src/pages/index.js"],"names":["AllTagsTemplate","_ref","tags","pageContext","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","map","tagName","index","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","HomeLayout","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","FlexCol","color","query","Index","data","console","log","edges","allMarkdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","edge","frontmatter","node","path","style","background","padding","width","marginBottom","border","borderRadius","textAlign","textDecoration","gatsby__WEBPACK_IMPORTED_MODULE_3__","title","excerpt"],"mappings":"uIAsBeA,UAnBS,SAAAC,GAAqB,IACnCC,EADmCD,EAAlBE,YACjBD,KACR,OACEE,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,UACGF,EAAKK,IAAI,SAACC,EAASC,GAClB,OACEL,OAAAC,EAAA,EAAAD,CAAA,MAAIM,IAAKD,GACPL,OAAAC,EAAA,EAAAD,CAACO,EAAA,KAAD,CAAMC,GAAE,SAAWJ,GAAYA,oICJzCK,iBAAaT,OAAAU,EAAA,EAAAV,CAAO,MAAP,CAAAW,OAAA,WAAAX,CAAH,CAAAY,KAAA,SAAAC,OAAA,8BAKVC,EAAUd,OAAAU,EAAA,EAAAV,CAAO,MAAP,CAAAW,OAAA,WAAAX,CAAH,+DAIFe,IAJE,KA4CAC,EAAK,aAkBHC,UAvDD,SAAApB,GAA2B,IAAxBqB,EAAwBrB,EAAxBqB,KAAMnB,EAAkBF,EAAlBE,YACrBoB,QAAQC,IAAI,OAAQF,EAAMnB,GADa,IAE/BsB,EAAUH,EAAKI,kBAAfD,MACR,OACErB,OAAAuB,EAAA,EAAAvB,CAACwB,EAAA,EAAD,KACExB,OAAAuB,EAAA,EAAAvB,CAACS,EAAD,KACET,OAAAuB,EAAA,EAAAvB,CAACc,EAAD,KACGO,EAAMlB,IAAI,SAAAsB,GAAQ,IACTC,EAAgBD,EAAKE,KAArBD,YAER,OADAP,QAAQC,IAAI,cAAeM,GAEzB1B,OAAAuB,EAAA,EAAAvB,CAAA,OACEM,IAAKoB,EAAYE,KACjBC,MAAO,CACLC,WAAY,UACZC,QAAS,SACTC,MAAO,MACPC,aAAc,OACdC,OAAQ,iBACRC,aAAc,SAGhBnC,OAAAuB,EAAA,EAAAvB,CAAA,MACE6B,MAAO,CAAEO,UAAW,SAAUC,eAAgB,cAE9CrC,OAAAuB,EAAA,EAAAvB,CAACsC,EAAA,KAAD,CAAM9B,GAAIkB,EAAYE,MAAOF,EAAYa,QAE3CvC,OAAAuB,EAAA,EAAAvB,CAAA,SAAI0B,EAAYc","file":"component---src-pages-index-js-eebd414bcf69e5ea4066.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/Layout'\nconst AllTagsTemplate = ({ pageContext }) => {\n  const { tags } = pageContext;\n  return (\n    <Layout>\n      <div>\n        <ul>\n          {tags.map((tagName, index) => {\n            return (\n              <li key={index}>\n                <Link to={`/tags/${tagName}`}>{tagName}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AllTagsTemplate;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout, { childBg, border, color } from '../components/Layout';\nimport styled from '@emotion/styled';\nimport Tags from '../templates/allTagsIndex';\n\nimport 'prismjs/themes/prism-tomorrow.css';\n\nconst HomeLayout = styled('div')`\n  display: flex;\n  width: 100%;\n`;\n\nconst FlexCol = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${color};\n`;\n\nconst Index = ({ data, pageContext }) => {\n  console.log('Data', data, pageContext);\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <HomeLayout>\n        <FlexCol>\n          {edges.map(edge => {\n            const { frontmatter } = edge.node;\n            console.log('frontMatter', frontmatter);\n            return (\n              <div\n                key={frontmatter.path}\n                style={{\n                  background: '#445492',\n                  padding: '1.5rem',\n                  width: '65%',\n                  marginBottom: '1rem',\n                  border: '3px solid #fff',\n                  borderRadius: '10px'\n                }}\n              >\n                <h3\n                  style={{ textAlign: 'center', textDecoration: 'underline' }}\n                >\n                  <Link to={frontmatter.path}>{frontmatter.title}</Link>\n                </h3>\n                <p>{frontmatter.excerpt}</p>\n              </div>\n            );\n          })}\n        </FlexCol>\n      </HomeLayout>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomepageQuery {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            excerpt\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Index;\n"],"sourceRoot":""}